<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cjh.demo.mapper.TreeNodeMapper" >
  <resultMap id="BaseResultMap" type="com.cjh.demo.model.TreeNode" >
    <constructor >
      <idArg column="tree_node_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="tree_node_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="tree_node_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="parent_node_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="position" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="icon" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    tree_node_id, tree_node_name, tree_node_type, parent_node_id, url, position, icon
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_vue_tree_node
    where tree_node_id = #{tree_node_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_vue_tree_node
    where tree_node_id = #{tree_node_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cjh.demo.model.TreeNode" >
    insert into t_vue_tree_node (tree_node_id, tree_node_name, tree_node_type, 
      parent_node_id, url, position, 
      icon)
    values (#{tree_node_id,jdbcType=INTEGER}, #{tree_node_name,jdbcType=VARCHAR}, #{tree_node_type,jdbcType=INTEGER}, 
      #{parent_node_id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{position,jdbcType=INTEGER}, 
      #{icon,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cjh.demo.model.TreeNode" >
    insert into t_vue_tree_node
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tree_node_id != null" >
        tree_node_id,
      </if>
      <if test="tree_node_name != null" >
        tree_node_name,
      </if>
      <if test="tree_node_type != null" >
        tree_node_type,
      </if>
      <if test="parent_node_id != null" >
        parent_node_id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="icon != null" >
        icon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tree_node_id != null" >
        #{tree_node_id,jdbcType=INTEGER},
      </if>
      <if test="tree_node_name != null" >
        #{tree_node_name,jdbcType=VARCHAR},
      </if>
      <if test="tree_node_type != null" >
        #{tree_node_type,jdbcType=INTEGER},
      </if>
      <if test="parent_node_id != null" >
        #{parent_node_id,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=INTEGER},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cjh.demo.model.TreeNode" >
    update t_vue_tree_node
    <set >
      <if test="tree_node_name != null" >
        tree_node_name = #{tree_node_name,jdbcType=VARCHAR},
      </if>
      <if test="tree_node_type != null" >
        tree_node_type = #{tree_node_type,jdbcType=INTEGER},
      </if>
      <if test="parent_node_id != null" >
        parent_node_id = #{parent_node_id,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=INTEGER},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
    </set>
    where tree_node_id = #{tree_node_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cjh.demo.model.TreeNode" >
    update t_vue_tree_node
    set tree_node_name = #{tree_node_name,jdbcType=VARCHAR},
      tree_node_type = #{tree_node_type,jdbcType=INTEGER},
      parent_node_id = #{parent_node_id,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      position = #{position,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR}
    where tree_node_id = #{tree_node_id,jdbcType=INTEGER}
  </update>

  <resultMap  type="com.cjh.demo.model.TreeNode" id="TreeNode" >
    <id column="tree_node_id" property="tree_node_id" javaType="java.lang.Integer" />
    <result column="tree_node_name" property="tree_node_name" javaType="java.lang.String" />
    <result column="tree_node_type" property="tree_node_type" javaType="java.lang.Integer" />
    <result column="parent_node_id" property="parent_node_id" javaType="java.lang.Integer" />
    <result column="url" property="url" javaType="java.lang.String" />
    <result column="position" property="position" javaType="java.lang.Integer" />
    <result column="icon" property="icon" javaType="java.lang.String" />
   <!-- <collection column="tree_node_type" property="childrenList" ofType="com.cjh.demo.model.TreeNode" javaType="java.util.ArrayList" />-->
  </resultMap>

  <select id="getTree" resultMap="TreeNode">
		select * from t_vue_tree_node where tree_node_type = 1
   </select>

  <select id="selectMenuChildrenByMenuNo" resultMap="TreeNode" parameterType="com.cjh.demo.model.TreeNode">
		select * from t_vue_tree_node WHERE parent_node_id = #{tree_node_id}
	</select>













</mapper>